# required
base_frame: base_link
map_frame: map

# optional
# odom_frame: world # required, TODO: optional - recommended

# rate of broadcasting tf transformations
tf_rate: 50
invert_tf: True

micp:
  # merging on gpu or cpu
  combining_unit: gpu
  # maximum number of correction steps per second
  # lower this to decrease the correction speed but save energy 
  corr_rate_max: 10

  # adjust max distance dependend of the state of localization
  # max_dist: 10.0
  # adaptive_max_dist_min: 0.15
  adaptive_max_dist: True # enable adaptive max dist

  # DEBUGGING / VISUALIZATION
  # - enable with care. Decreases the processing time a lot
  # corr = correspondences
  viz_corr: True
  # corr = correction
  print_corr_rate: False
  disable_corr: True
  
  # initial pose changes
  trans: [0.0, 0.0, 0.0]
  rot: [0.0, 0.0, 0.0] # euler angles (3) or quaternion (4)  

# describe your sensor setup here
sensors: # list of range sensors - at least one is required
  velodyne:
    topic: velodyne_points
    type: spherical
    model:
      range_min: 0.5
      range_max: 130.0
      phi_min: -0.261799067259
      phi_inc: 0.03490658503988659
      phi_N: 16
      theta_min: -3.14159011841
      theta_inc: 0.01431249500496489 # (2*pi)/439 instead of (2*pi)/440 
      theta_N: 440
    micp:
      adaptive_max_dist_min: 0.15
      max_dist: 1.0
      weight: 10
      backend: embree
  # sick:
  #   topic: scan
  #   micp:
  #     max_dist: 1.0
  #     adaptive_max_dist_min: 0.15
  #     weight: 2.0
  #     backend: optix
  # kinect:
  #   topic: kinect/depth/image_raw
  #   model_topic: kinect/rgb/camera_info
  #   micp:
  #     max_dist: 0.7
  #     weight: 2.0
  #     backend: optix
  # wheels: # pull robot to the mesh
  #   ranges: [0.2, 0.2, 0.2, 0.2]
  #   type: ondn
  #   frame: base_footprint
  #   model:
  #     width: 4
  #     height: 1
  #     range_min: 0.0
  #     range_max: 10.0
  #     origs: [[ 0.15,  0.18,  0.2], # front left 
  #             [ 0.15, -0.18,  0.2], # front right
  #             [-0.15,  0.18,  0.2], # rear left
  #             [-0.15, -0.18,  0.2]] # rear right
  #     dirs:  [[ 0.0,  0.0, -1.0],
  #             [ 0.0,  0.0, -1.0],
  #             [ 0.0,  0.0, -1.0],
  #             [ 0.0,  0.0, -1.0]]
  #   micp:
  #     max_dist: 1.0
  #     adaptive_max_dist_min: 0.2
  #     weight: 1.0
  #     backend: optix
  # dont_drive_through_walls:
  #   ranges: [0.0]
  #   type: ondn
  #   frame: base_footprint
  #   model:
  #     width: 4
  #     height: 1
  #     range_min: 0.0
  #     range_max: 0.2
  #     origs: [[ 0.2,  0.0,  0.2]] 
  #     dirs:  [[ -1.0,  0.0, 0.0]]
  #   micp:
  #     max_dist: 0.2
  #     weight: 1
  #     backend: optix
  # base_footprint:
  #   ranges: [0.2]
  #   type: ondn
  #   frame: base_footprint
  #   model:
  #     width: 1
  #     height: 1
  #     range_min: 0.0
  #     range_max: 10.0
  #     origs: [
  #       [0.0, 0.0, 0.2]
  #     ]
  #     dirs: [
  #       [0.0, 0.0, -1.0]
  #     ]
  #   micp:
  #     max_dist: 1.0
  #     weight: 1.0
  #     backend: embree